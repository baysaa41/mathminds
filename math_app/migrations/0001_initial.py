# Generated by Django 5.0.7 on 2025-01-16 10:35

import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=64, null=True)),
                ('value', models.CharField(max_length=2048)),
                ('default_score', models.BigIntegerField()),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'answer_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_order', models.BigIntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=64, null=True)),
                ('value', models.CharField(blank=True, max_length=2048, null=True)),
                ('user_point', models.BigIntegerField(blank=True, null=True)),
                ('assignment_point', models.BigIntegerField(blank=True, null=True)),
                ('submitted', models.DateTimeField(blank=True, null=True)),
                ('is_primary', models.BigIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('hint', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'answers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerSheets',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.FloatField(blank=True, null=True)),
                ('score', models.BigIntegerField(blank=True, null=True)),
                ('adjusted_score', models.BigIntegerField(blank=True, null=True)),
                ('submitted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'answer_sheets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=256)),
                ('content', models.TextField(blank=True, null=True)),
                ('published', models.DateTimeField()),
                ('last_edited', models.DateTimeField()),
                ('status', models.CharField(max_length=32)),
                ('abstract', models.CharField(blank=True, max_length=255, null=True)),
                ('number_viewed', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'articles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(blank=True, null=True)),
                ('type', models.BigIntegerField(blank=True, null=True)),
                ('difficulty', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assignments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Baldan',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('age', models.BigIntegerField(blank=True, null=True)),
                ('last_score', models.BigIntegerField(blank=True, null=True)),
                ('self_expectation', models.BigIntegerField(blank=True, null=True)),
                ('goal_expectation', models.BigIntegerField(blank=True, null=True)),
                ('number_solved', models.BigIntegerField(blank=True, null=True)),
                ('number_skipped', models.CharField(blank=True, max_length=256, null=True)),
                ('total_points', models.BigIntegerField(blank=True, null=True)),
                ('total_assignment_points', models.BigIntegerField(blank=True, null=True)),
                ('meta_data', models.TextField(blank=True, null=True)),
                ('updated', models.BooleanField(blank=True, null=True)),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'baldan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlueprintItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('num', models.BigIntegerField()),
            ],
            options={
                'db_table': 'blueprint_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blueprints',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'blueprints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.BigIntegerField(blank=True, null=True)),
                ('category_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTopic',
            fields=[
                ('category_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('topic_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'category_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collection_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'collections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=1024)),
                ('resource', models.CharField(blank=True, max_length=32, null=True)),
                ('comment_ip', models.CharField(blank=True, max_length=32, null=True)),
                ('comment_date', models.DateTimeField(blank=True, null=True)),
                ('comment_url', models.CharField(blank=True, max_length=128, null=True)),
                ('mute_comments', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Formulas',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('content', models.TextField()),
                ('mute_comments', models.BooleanField()),
                ('published', models.DateTimeField()),
                ('last_edited', models.DateTimeField()),
                ('status', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'formulas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('grade', models.BigIntegerField()),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'grade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=30, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('key_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=128)),
                ('body', models.TextField()),
                ('type', models.CharField(max_length=255)),
                ('status', models.BigIntegerField()),
                ('remaining', models.BigIntegerField()),
                ('total_recipients', models.BigIntegerField()),
                ('urgency', models.BigIntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MixerItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('collection_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mixer_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mixers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'mixers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Newkeys',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'newkeys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=26, null=True)),
                ('point', models.BigIntegerField()),
            ],
            options={
                'db_table': 'points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Problems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.BigIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('answer', models.CharField(blank=True, max_length=1024, null=True)),
                ('last_edited', models.DateTimeField(blank=True, null=True)),
                ('rendering', models.CharField(max_length=32)),
                ('mute_comments', models.BooleanField(blank=True, null=True)),
                ('success_rate', models.FloatField(blank=True, null=True)),
                ('is_published', models.BooleanField(blank=True, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'db_table': 'problems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('picture_url', models.CharField(max_length=512)),
                ('remaining', models.BigIntegerField()),
                ('price', models.BigIntegerField()),
                ('status', models.BigIntegerField()),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provinces',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'provinces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number_of_items', models.BigIntegerField()),
                ('unit_price', models.BigIntegerField()),
                ('total_price', models.BigIntegerField()),
                ('purchase_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'purchases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuizGroup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.BigIntegerField(blank=True, null=True)),
                ('order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quiz_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuizGroupItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('quiz_order', models.BigIntegerField(blank=True, null=True)),
                ('year', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quiz_group_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuizItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quiz_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quizzes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('status', models.BigIntegerField()),
                ('default_time_limit', models.BigIntegerField(blank=True, null=True)),
                ('average_score', models.BigIntegerField(blank=True, null=True)),
                ('standard_deviation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('score_table', models.CharField(blank=True, max_length=512, null=True)),
                ('is_sample', models.BooleanField(blank=True, null=True)),
                ('is_public', models.BooleanField(blank=True, null=True)),
                ('type', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quizzes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegCodes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('num_days', models.BigIntegerField()),
                ('price', models.BigIntegerField()),
                ('activated', models.DateTimeField(blank=True, null=True)),
                ('code_type', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reg_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('year', models.BigIntegerField(blank=True, null=True)),
                ('score', models.BigIntegerField(blank=True, null=True)),
                ('adjusted_score', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schools',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'schools',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solutions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('hint', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('mute_comments', models.BooleanField()),
            ],
            options={
                'db_table': 'solutions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('first_name', models.CharField(blank=True, max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('plain_password', models.CharField(blank=True, max_length=128, null=True)),
                ('salt', models.CharField(blank=True, max_length=32, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=60, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('picture_url', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True, unique=True)),
                ('telephone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('balance', models.BigIntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField()),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('is_blocked', models.BooleanField()),
                ('marketing_email', models.BooleanField()),
                ('number_solved', models.BigIntegerField(blank=True, null=True)),
                ('success_rate', models.FloatField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TopicKeyword',
            fields=[
                ('topic_id', models.BigIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'topic_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('weight', models.BigIntegerField(blank=True, null=True)),
                ('topic_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFormula',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('formula_order', models.BigIntegerField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=512, null=True)),
                ('number_of_view', models.BigIntegerField(blank=True, null=True)),
                ('last_view', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_formula',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProblem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_order', models.BigIntegerField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=512, null=True)),
                ('number_of_view', models.BigIntegerField(blank=True, null=True)),
                ('last_view', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_problem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTopic',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('l10_rate', models.FloatField(blank=True, null=True)),
                ('success_rate', models.FloatField(blank=True, null=True)),
                ('disabled', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserUploads',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('upload_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_uploads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleAssignment',
            fields=[
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.articles')),
            ],
            options={
                'db_table': 'article_assignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssignmentGroup',
            fields=[
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.assignments')),
            ],
            options={
                'db_table': 'assignment_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssignmentStudent',
            fields=[
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.assignments')),
            ],
            options={
                'db_table': 'assignment_student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupStudent',
            fields=[
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.groups')),
            ],
            options={
                'db_table': 'group_student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordFormula',
            fields=[
                ('keyword', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.keywords')),
            ],
            options={
                'db_table': 'keyword_formula',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordKeyword',
            fields=[
                ('keyword_source', models.OneToOneField(db_column='keyword_source', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.keywords')),
            ],
            options={
                'db_table': 'keyword_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordProblem',
            fields=[
                ('keyword', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.keywords')),
            ],
            options={
                'db_table': 'keyword_problem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageUser',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.messages')),
            ],
            options={
                'db_table': 'message_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemComments',
            fields=[
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.problems')),
            ],
            options={
                'db_table': 'problem_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductComments',
            fields=[
                ('solution', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.products')),
            ],
            options={
                'db_table': 'product_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolutionComments',
            fields=[
                ('solution', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.solutions')),
            ],
            options={
                'db_table': 'solution_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolutionFormula',
            fields=[
                ('solution', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.solutions')),
            ],
            options={
                'db_table': 'solution_formula',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherGroup',
            fields=[
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='math_app.users')),
            ],
            options={
                'db_table': 'teacher_group',
                'managed': False,
            },
        ),
    ]
